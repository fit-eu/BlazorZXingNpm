@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<section class="zxing-container" id="zxingContent">
    <h1 class="zxing-title">@Title</h1>
    <div>
        @if (ShowStart)
        {
            <a class="btn btn-primary" id="zxingStartButton" @onclick="StartDecoding">Start</a>
        }

        @if (ShowReset)
        {
            <a class="btn btn-primary" id="zxingResetButton" @onclick="StopDecoding">Reset</a>
        }
    </div>

    <br />
    <div id="zxingVideoContainer">
        <video id="zxingVideo" width="@VideoWidth" height="@VideoHeigth"></video>
    </div>
    @if (ShowVideoDeviceList)
    {


        @if (videoInputDevices == null)
        {
            <p>looking for devices</p> }
        else
        {
            <div id="sourceSelectPanel">
                <label for="zxingSourceSelect">changevideosource:</label>
                <select id="zxingSourceSelect" class="zxing-video-input" @onchange="ChangeVideoInputSource">
                    @foreach (var videoInputDevice in videoInputDevices)
                    {
                        <option value="@videoInputDevice.DeviceId">@videoInputDevice.Label</option>
                    }
                </select>
            </div>}}

</section>



@code{
    //private string xtest { get; set; } = "---";

    [Parameter]
    public string Title { get; set; } = "Scan Barcode from Camera";

    [Parameter]
    public bool StartCameraAutomatically { get; set; } = false;

    [Parameter]
    public bool ShowStart { get; set; } = true;

    [Parameter]
    public bool ShowReset { get; set; } = true;

    [Parameter]
    public bool ShowVideoDeviceList { get; set; } = true;

    [Parameter]
    public int VideoWidth { get; set; } = 300;

    [Parameter]
    public int VideoHeigth { get; set; } = 200;

    public string BarcodeText { get; set; }

    List<VideoInputDevice> videoInputDevices;



    protected override async Task OnInitializedAsync()
    {
        videoInputDevices = await JsInteropClass.GetVideoInputDevices(JSRuntime, "get");
        JsInteropClass.BarcodeReceived += ReceivedBarcodeText;
        if (StartCameraAutomatically)
        {
            StartDecoding();
        }
    }

    private async Task GetVideoInputDevicesAsync()
    {
        videoInputDevices = await JsInteropClass.GetVideoInputDevices(JSRuntime, "get");
    }

    private void StartDecoding()
    {
        JsInteropClass.StartDecoding(JSRuntime, "zxingVideo");
    }

    private void StopDecoding()
    {
        JsInteropClass.StopDecoding(JSRuntime);
    }

    private void ReceivedBarcodeText(BarcodeReceivedEventArgs args)
    {
        JsInteropClass.StopDecoding(JSRuntime);

        this.BarcodeText = args.BarcodeText;
        StateHasChanged();
    }

    private void ChangeVideoInputSource(ChangeEventArgs args)
    {
        JsInteropClass.SetVideoInputDevice(JSRuntime, args.Value.ToString());
    } 
}